/** Given the rotated sorted array of integers, which contains distinct element,
 * and an integer target, return the index of target if it is in the array.
 * otherwise return -1.
 */
package SearchingAlgorithm;

public class FindTargetIndexBinarySearch {
    public static void main(String[] args) {
        int[] arr = {3,4,5,1,2};
        int target = 4;
        System.out.println(findTargetIndex(arr,target));
    }

    static int findTargetIndex(int[] arr, int target){
        int n = arr.length;
        int st=0, end = n-1;
        while (st <= end){
            int mid = st + (end - st)/2;
            if (arr[mid] == target){
                return mid;
            } else if (arr[mid] < arr[end]) {
                if (target > arr[mid] && target <= arr[end]){
                    st = mid + 1;
                } else {
                    end = mid - 1;
                }
            } else {
                if (target >= arr[st] && target < arr[mid]){
                    end = mid -1;
                } else {
                    st = mid +1;
                }
            }
        }
        return -1;
    }


}
